name: Trdl publisher
on:
  push:
    branches:
      - multiwerf
    paths:
      - multiwerf.json
      - trdl_channels.yaml

jobs:
  release:
    name: Publish release channels using trdl server
    runs-on: ubuntu-latest
    steps:
    - name: Publish
      uses: werf/trdl-vault-actions/publish@main
      with:
        vault-addr: ${{ secrets.TRDL_VAULT_ADDR }}
        project-name: werf
        vault-auth-method: approle
        vault-role-id: ${{ secrets.TRDL_VAULT_ROLE_ID }}
        vault-secret-id: ${{ secrets.TRDL_VAULT_SECRET_ID }}

  deploy_channels_cm_prod:
    name: Deploy multiwerf.json and trdl_channels.yaml to production
    needs: release
    runs-on: tfprod-werf
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Converge
      uses: werf/actions/converge@v1.2
      with:
        env: production
      env:
        WERF_NAMESPACE: "werfio-production"
        WERF_KUBE_CONTEXT: prod
        WERF_DIR: "ci"

  publish_werf_images:
    name: Publish images with werf by trdl group and channel
    needs: release
    runs-on: tfprod-werf
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Login to werf registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.WERF_REGISTRY_SERVER }}
        username: ${{ secrets.WERF_REGISTRY_USERNAME }}
        password: ${{ secrets.WERF_REGISTRY_PASSWORD }}

    - name: Login to ghcr.io
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.WERF_IN_IMAGE_REPO_LOGIN }}
        password: ${{ secrets.WERF_IN_IMAGE_REPO_PASSWORD }}

    - name: Build and publish werf images
      run: |
        . $(trdl use werf 1.2 stable)
        ./scripts/werf-in-image/build-and-publish.sh

  notification:
    name: Notification
    if: always()
    needs:
      - release
      - deploy_channels_cm_prod
      - publish_werf_images
    runs-on: ubuntu-latest
    steps:

      - uses: technote-space/workflow-conclusion-action@v2

      - name: Notify
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ env.WORKFLOW_CONCLUSION }}
          MSG_MINIMAL: "ref,actions url"
