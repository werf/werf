name: test:cr-cleanup

on:
  schedule:
    - cron: "0 6 * * *"
  repository_dispatch:
    types: ["test:cr-cleanup"]
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  DEBIAN_FRONTEND: "noninteractive"

jobs:
  cr-cleanup:
    strategy:
      fail-fast: false
      matrix:
        implementation:
          - acr
          # - dockerhub
          - ecr
          # - gcr
          # - github
          # - harbor
          - quay
    runs-on: ubuntu-22.04
    env:
      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      WERF_TEST_DOCKERHUB_PASSWORD: ${{ secrets.WERF_TEST_DOCKERHUB_PASSWORD }}
      WERF_TEST_DOCKERHUB_USERNAME: ${{ secrets.WERF_TEST_DOCKERHUB_USERNAME }}
      WERF_TEST_QUAY_TOKEN: ${{ secrets.WERF_TEST_QUAY_TOKEN }}
      WERF_TEST_QUAY_USERNAME: ${{ secrets.WERF_TEST_QUAY_USERNAME }}
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup (common)
        run: sudo apt-get install -y jq

      - if: matrix.implementation == 'acr'
        name: Setup (acr)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - if: matrix.implementation == 'ecr'
        name: Setup (ecr)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - if: matrix.implementation == 'gcr'
        name: Setup (gcr)
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          service_account_email: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Cleanup
        run: ./scripts/ci/integration_tests_registries_cleaner.sh ${{ matrix.implementation }}

  notify:
    if: always()
    needs: cr-cleanup
    uses: ./.github/workflows/_notification.yml
    secrets:
      mentionGroupID: ${{ secrets.SLACK_MENTION_GROUP_ID }}
      webhook: ${{ secrets.SLACK_WEBHOOK }}
