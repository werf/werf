en:
  entries:
    - &dockerfile
      name: dockerfile
      type: "image-from-dockerfile"
      dependencies:
        - target dockerfile instructions
        - hashsum of files related with ADD and COPY dockerfile instructions
        - args used in target dockerfile instructions
        - addHost
      werf_config: |
        image: <image name... || ~>
        dockerfile: <relative path>
        context: <relative path>
        target: <docker stage name>
        args:
          <build arg name>: <value>
        addHost:
        - <host:ip>
    - &image_artifact_from
      name: from
      type: "image artifact"
      dependencies:
        - from
        - or from image stages-digest
        - or from artifact stages-digest
        - "actual digest from registry (if fromLatest: true)"
        - fromCacheVersion
        - mounts
      references:
        - name: "Base image"
          link: "/usage/build/stapel/base.html"
        - name: "Reducing image size and speeding up a build by mounts"
          link: "/usage/build/stapel/mounts.html"
      werf_config: |
        from: <image[:<tag>]>
        fromLatest: <bool>
        fromCacheVersion: <arbitrary string>
        fromImage: <image name>
        fromArtifact: <artifact name>
        mount:
        - from: build_dir
          to: <absolute or relative path>
        - from: tmp_dir
          to: <absolute path>
        - fromPath: <absolute or relative path>
          to: <absolute path>
    - &image_artifact_before_install
      name: beforeInstall
      type: "image artifact"
      dependencies:
        - beforeInstall bash commands or ansible tasks
        - cacheVersion
        - beforeInstallCacheVersion
      references:
        - name: "Running assembly instructions"
          link: "/usage/build/stapel/instructions.html"
      werf_config: |
        shell:
          beforeInstall:
          - <bash command>
          cacheVersion: <arbitrary string>
          beforeInstallCacheVersion: <arbitrary string>

        or

        ansible:
          beforeInstall:
          - <task>
          cacheVersion: <arbitrary string>
          beforeInstallCacheVersion: <arbitrary string>
    - &image_artifact_dependencies_before_install
      name: dependenciesBeforeInstall
      type: "image artifact"
      dependencies:
        - dependencies before install
      references:
        - name: "Importing from images and artifacts"
          link: "/usage/build/stapel/imports.html"
      werf_config: |
        import:
        - artifact: <artifact name>
          before: install
          add: <absolute path>
          to: <absolute path>
          owner: <owner>
          group: <group>
          includePaths:
          - <relative path or glob>
          excludePaths:
          - <relative path or glob>
    - &image_artifact_git_archive
      name: gitArchive
      type: "image artifact"
      dependencies:
        - git mappings
      references:
        - name: "Adding source code from git repositories"
          link: "/usage/build/stapel/git.html"
      werf_config: |
        git:
        - add: <absolute path>
          to: <absolute path>
          owner: <owner>
          group: <group>
          includePaths:
          - <relative path or glob>
          excludePaths:
          - <relative path or glob>
        - url: <git repo url>
          branch: <branch name>
          commit: <commit>
          tag: <tag>
          add: <absolute path>
          to: <absolute path>
          owner: <owner>
          group: <group>
          includePaths:
          - <relative path or glob>
          excludePaths:
          - <relative path or glob>
    - &image_artifact_install
      name: install
      type: "image artifact"
      dependencies:
        - install bash commands or ansible tasks
        - installCacheVersion
        - git files hashsum by install stageDependency
      references:
        - name: "Running assembly instructions"
          link: "/usage/build/stapel/instructions.html"
        - name: "Dependency on git repo changes"
          link: "/usage/build/stapel/instructions.html#dependency-on-changes-in-the-git-repo"
      werf_config: |
        git:
        - stageDependencies:
            install:
            - <relative path or glob>

        shell:
          install:
          - <bash command>
          installCacheVersion: <arbitrary string>

        or

        ansible:
          install:
          - <task>
          installCacheVersion: <arbitrary string>
    - &image_artifact_dependencies_after_install
      name: dependenciesAfterInstall
      type: "image artifact"
      dependencies:
        - dependencies after install
      werf_config: |
        import:
        - artifact: <artifact name>
          after: install
          add: <absolute path>
          to: <absolute path>
          owner: <owner>
          group: <group>
          includePaths:
          - <relative path or glob>
          excludePaths:
          - <relative path or glob>
      references:
        - name: "Importing from images and artifacts"
          link: "/usage/build/stapel/imports.html"
    - &image_artifact_before_setup
      name: beforeSetup
      type: "image artifact"
      dependencies:
        - beforeSetup bash commands or ansible tasks
        - beforeSetupCacheVersion
        - git files hashsum by beforeSetup stageDependency
      references:
        - name: "Running assembly instructions"
          link: "/usage/build/stapel/instructions.html"
        - name: "Dependency on git repo changes"
          link: "/usage/build/stapel/instructions.html#dependency-on-changes-in-the-git-repo"
      werf_config: |
        git:
        - stageDependencies:
            beforeSetup:
            - <relative path or glob>

        shell:
          beforeSetup:
          - <bash command>
          beforeSetupCacheVersion: <arbitrary string>

        or

        ansible:
          beforeSetup:
          - <task>
          beforeSetupCacheVersion: <arbitrary string>
    - &image_artifact_dependencies_before_setup
      name: dependenciesBeforeSetup
      type: "image artifact"
      dependencies:
        - dependencies before setup
      werf_config: |
        import:
        - artifact: <artifact name>
          before: setup
          add: <absolute path>
          to: <absolute path>
          owner: <owner>
          group: <group>
          includePaths:
          - <relative path or glob>
          excludePaths:
          - <relative path or glob>
      references:
        - name: "Importing from images and artifacts"
          link: "/usage/build/stapel/imports.html"
    - &image_artifact_setup
      name: setup
      type: "image artifact"
      dependencies:
        - setup bash commands or ansible tasks
        - setupCacheVersion
        - git files hashsum by setup stageDependency
      references:
        - name: "Running assembly instructions"
          link: "/usage/build/stapel/instructions.html"
        - name: "Dependency on git repo changes"
          link: "/usage/build/stapel/instructions.html#dependency-on-changes-in-the-git-repo"
      werf_config: |
        git:
        - stageDependencies:
            setup:
            - <relative path or glob>

        shell:
          setup:
          - <bash command>
          setupCacheVersion: <arbitrary string>

        or

        ansible:
          setup:
          - <task>
          setupCacheVersion: <arbitrary string>
    - &image_git_cache
      name: gitCache
      type: "image"
      dependencies:
        - size of git diff between last used commit and actual
      references:
        - name: "More details: gitArchive, gitCache, gitLatestPatch"
          link: "/usage/build/stapel/git.html#more-details-gitarchive-gitcache-gitlatestpatch"
    - &image_dependencies_after_setup
      name: dependenciesAfterSetup
      type: "image artifact"
      dependencies:
        - dependencies after setup
      werf_config: |
        import:
        - artifact: <artifact name>
          after: setup
          add: <absolute path>
          to: <absolute path>
          owner: <owner>
          group: <group>
          includePaths:
          - <relative path or glob>
          excludePaths:
          - <relative path or glob>
      references:
        - name: "Importing from images and artifacts"
          link: "/usage/build/stapel/imports.html"
    - &image_git_latest_patch
      name: gitLatestPatch
      type: "image"
      dependencies:
        - presence of git diff changes between last used commit and actual
      references:
        - name: "More details: gitArchive, gitCache, gitLatestPatch"
          link: "/usage/build/stapel/git.html#more-details-gitarchive-gitcache-gitlatestpatch"
    - &image_docker_instructions
      name: dockerInstructions
      type: "image"
      dependencies:
        - docker instructions
      references:
        - name: Adding docker instructions
          link: "/usage/build/stapel/dockerfile.html"
      werf_config: |
        docker:
          VOLUME:
          - <volume>
          EXPOSE:
          - <expose>
          ENV:
            <env name>: <env value>
          LABEL:
            <label name>: <label value>
          ENTRYPOINT: <entrypoint>
          CMD: <cmd>
          WORKDIR: <workdir>
          USER: <user>
          HEALTHCHECK: <healthcheck>
ru:
  entries:
    - <<: *dockerfile
    - <<: *image_artifact_from
      references:
        - name: "Базовый образ"
          link: "/usage/build/stapel/base.html"
        - name: "Ускорение сборки и уменьшение размера за счёт маунтов"
          link: "/usage/build/stapel/mounts.html"
    - <<: *image_artifact_before_install
      references:
        - name: "Запуск инструкций сборки"
          link: "/usage/build/stapel/instructions.html"
    - <<: *image_artifact_dependencies_before_install
      references:
        - name: "Импорт из артефактов и образов"
          link: "/usage/build/stapel/imports.html"
    - <<: *image_artifact_git_archive
      references:
        - name: "Добавление исходного кода из git-репозиториев"
          link: "/usage/build/stapel/git.html"
    - <<: *image_artifact_install
      references:
        - name: "Запуск инструкций сборки"
          link: "/usage/build/stapel/instructions.html"
        - name: "Зависимость от изменений в git-репозитории"
          link: "/usage/build/stapel/instructions.html#зависимость-от-изменений-в-git-репозитории"
    - <<: *image_artifact_dependencies_after_install
      references:
        - name: "Импорт из артефактов и образов"
          link: "/usage/build/stapel/imports.html"
    - <<: *image_artifact_before_setup
      references:
        - name: "Запуск инструкций сборки"
          link: "/usage/build/stapel/instructions.html"
        - name: "Зависимость от изменений в git-репозитории"
          link: "/usage/build/stapel/instructions.html#зависимость-от-изменений-в-git-репозитории"
    - <<: *image_artifact_dependencies_before_setup
      references:
        - name: "Импорт из артефактов и образов"
          link: "/usage/build/stapel/imports.html"
    - <<: *image_artifact_setup
      references:
        - name: "Запуск инструкций сборки"
          link: "/usage/build/stapel/instructions.html"
        - name: "Зависимость от изменений в git-репозитории"
          link: "/usage/build/stapel/instructions.html#зависимость-от-изменений-в-git-репозитории"
    - <<: *image_git_cache
      references:
        - name: "Подробнее про gitArchive, gitCache, gitLatestPatch"
          link: "/usage/build/stapel/git.html#подробнее-про-gitarchive-gitcache-gitlatestpatch"
    - <<: *image_dependencies_after_setup
      references:
        - name: "Импорт из артефактов и образов"
          link: "/usage/build/stapel/imports.html"
    - <<: *image_git_latest_patch
      references:
        - name: "Подробнее про gitArchive, gitCache, gitLatestPatch"
          link: "/usage/build/stapel/git.html#подробнее-про-gitarchive-gitcache-gitlatestpatch"
    - <<: *image_docker_instructions
      references:
        - name: "Использование Docker-инструкций"
          link: "/usage/build/stapel/dockerfile.html"
