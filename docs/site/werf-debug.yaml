project: werfio-ng
configVersion: 1

---
artifact: asset
from: jekyll/builder:3
fromCacheVersion: 20210318
ansible:
  install:
  - shell: |
      export PATH=/usr/jekyll/bin/:$PATH
      gem update bundler
  - name: "Install Dependencies"
    shell: bundle install
    args:
      executable: /bin/bash
      chdir: /app/docs/site
  beforeSetup:
  - file:
      path: "{{`{{ item }}`}}"
      state: directory
      mode: 0777
    with_items:
    - /app/_site/main/
    - /app/_site/ru/
  - name: "releases.json"
    copy:
      content: |
{{ .Files.Get ".werf/artifacts/releases.json" | indent 8 }}
      dest:  /app/docs/site/_data/releases.json
  - name: "Strip escaping sequence from releases.json"
    shell: |
      sed -i 's#{% raw %}\ *##; s#{% endraw %}##' /app/docs/site/_data/releases.json
    args:
      executable: /bin/bash
      warn: false
  - name: "releases_history.json"
    copy:
      content: |
{{ .Files.Get ".werf/artifacts/releases_history.json" | indent 8 }}
      dest:  /app/docs/site/_data/releases_history.json
  - name: "channels_versions.json"
    copy:
      content: |
{{ .Files.Get ".werf/artifacts/channels_versions.json" | indent 8 }}
      dest: /app/docs/site/_data/channels_versions.json
  - name: "feeds.base64"
    copy:
      content: |
{{ .Files.Get ".werf/artifacts/feeds.tgz.base64" | indent 8 }}
      dest: /app/docs/site/feeds.tgz.base64
  - name: "unpack RSS feeds"
    shell: |
      if [ -f feeds.tgz.base64 ] ; then base64 -d feeds.tgz.base64 > feeds.tgz; tar -xzf feeds.tgz  --transform='s/feeds/./' --wildcards '*.xml'; else echo "RSS feeds file feeds.tgz is absent!";  exit 1 ; fi
      rm feeds.tgz.base64
      rm feeds.tgz
    args:
      executable: /bin/bash
      warn: false
      chdir: /app/docs/site
  - shell: |
      JEKYLL_ENV=production jekyll build -s /app/docs/site  -d /app/_site/main/ --config /app/docs/_config.yml
      JEKYLL_ENV=production jekyll build -s /app/docs/site  -d /app/_site/ru/ --config /app/docs/_config.yml,/app/docs/_config_ru.yml
    args:
      executable: /bin/bash
      chdir: /app/docs/site
git:
- add: /docs
  to: /app/docs
  owner: jekyll
  group: jekyll
  excludePaths:
  - '**/*.sh'
  - '**/werf*.yaml'
  - '**/docker-compose.yml'
  - site/.werf
  - site/.helm
  - site/backend
  - site/documentation
  - .github
  stageDependencies:
    install: ['site/Gemfile','site/Gemfile.lock']
    beforeSetup: '**/*'
---
image: web-backend
from: golang:1.15
fromCacheVersion: 20210318
docker:
  WORKDIR: /app
ansible:
  install:
    - apt:
        name: ['git','curl', 'jq', 'vim']
        state: present
        update_cache: yes
    - name: Build apis
      shell: |
        apt update && apt install -yq git curl jq
        go get -d -v ./
        go get github.com/go-delve/delve/cmd/dlv
  setup:
    - shell: |
        go build -gcflags "all=-N -l" -v -o /app/server /go/src/app
      args:
        executable: /bin/bash
        chdir: /go/src/app
git:
  - add: /docs/site/backend
    to: /go/src/app
    stageDependencies:
      install: '**/*'
import:
  - artifact: asset
    add: /app/_site
    to: /app/root
    before: setup
---
image: tuf-router
from: fabiocicerchia/nginx-lua:1.21-alpine@sha256:525aa8fd0ac9bf5c7e82cd83b3f8ebf620bedb0d0b1e52955745fd53917eb24c
ansible:
  install:
  - copy:
      content: |
{{ .Files.Get ".werf/nginx-tuf-router.conf" | indent 8 }}
      dest: /etc/nginx/nginx.conf
  - copy:
      content: |
{{ .Files.Get ".werf/tuf-router.lua" | indent 8 }}
      dest: /etc/nginx/tuf-router.lua

