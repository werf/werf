## Специальные отладочные функции

Флаг `--debug-templates` включает расширенный режим отладки Go-шаблонов в werf. Это позволяет писать отладочную информацию в лог без влияния на результат выполнения шаблонов.

Следующие шаблонные функции работают всегда, но **выводят отладочную информацию в лог только при включённом флаге `--debug-templates`** (или переменной окружения `WERF_DEBUG_TEMPLATES=true`):

* `{{ include_debug "template_name" . }}`
* `{{ printf_debug "message" }}`
* `{{ tpl_debug "template_string" . }}`
* `{{ dump_debug $ }}`

### Поведение при выключенном режиме отладки:

* `include_debug` и `tpl_debug` работают как `include` и `tpl` соответственно;
* `printf_debug` и `dump_debug` не делают ничего (не выводят ничего и не влияют на результат шаблона).

### Поведение в режиме отладки (`--debug-templates`):

* `include_debug` логирует имя шаблона, его содержимое и результат шаблонизации;
* `tpl_debug` логирует переданную строку-шаблон и результат шаблонизации;
* `printf_debug` логирует сообщение;
* `dump_debug` делает pretty-dump (удобный формат) переданного значения в лог. Поддерживает любые типы, включая `.Values`, root-контекст (`$`), вложенные структуры и т. п. Никогда не влияет на вывод шаблона.

### Когда полезно

* Диагностика сложных шаблонов;
* Проверка текущих значений переменных, доступных в шаблоне;
* Анализ порядка вызова и содержимого шаблонов;
* Отладка без изменения логики шаблонов или вывода.
