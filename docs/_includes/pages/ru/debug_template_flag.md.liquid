## Специальные отладочные функции

Флаг `--debug-templates` включает расширенный режим отладки Go-шаблонов в werf. Это позволяет писать отладочную информацию в лог, не влияя на результат шаблонизации. Ниже описаны ситуации, в которых такие функции могут быть полезны, и то, как они себя ведут в зависимости от режима отладки.

### Включение отладки шаблонов с помощью `printf_debug`

Вы можете вставить сообщения в лог на произвольных этапах шаблонизации с помощью `printf_debug`. Это удобно для отслеживания значений переменных, выполнения условий и порядка шаблонизации.

* **С `--debug-templates`**: сообщение выводится в лог, не влияет на результат щаблонизации;
* **Без `--debug-templates`**: функция ничего не делает.

{% raw %}
```bash
{{ printf_debug (printf "Current value: %v" .Values.someVar) }}
```
{% endraw %}

### Вывод отладочной информации о значении с помощью `dump_debug`

Если нужно увидеть структуру переменной, особенно сложной (например, `.Values` или `$`), используйте `dump_debug`.

* **С `--debug-templates`**: структура значения логируется в человекочитаемом виде, не влияет на результат щаблонизации;
* **Без `--debug-templates`**: функция ничего не делает.

{% raw %}
```bash
{{ dump_debug $.Values.werf }}
```
{% endraw %}

### Отладка включаемых шаблонов с помощью `include_debug`

Если шаблон включает другие шаблоны, и вы хотите отследить процесс включения, используйте `include_debug`.

* **С `--debug-templates`**: работает как `include`, но также логирует имя шаблона, его содержимое и результат его шаблонизации;
* **Без `--debug-templates`**: работает как обычный `include`.

{% raw %}
```bash
{{ include_debug "my-template" . }}
```
{% endraw %}

### Отладка шаблонных строк с помощью `tpl_debug`

Если вы формируете шаблон как строку и хотите увидеть, как он рендерится, используйте `tpl_debug`.

* **С `--debug-templates`**: работает как `tpl`, но также логирует переданную строку-шаблон и результат шаблонизации;
* **Без `--debug-templates`**: работает как обычный `tpl`.

{% raw %}
```bash
{{ tpl_debug "{{ .Values.env }}" . }}
```
{% endraw %}