// Code generated by "enumer -type=containerBackendType -trimprefix=containerBackend"; DO NOT EDIT.

package host_cleaning

import (
	"fmt"
	"strings"
)

const _containerBackendTypeName = "DockerBuildahTest"

var _containerBackendTypeIndex = [...]uint8{0, 6, 13, 17}

const _containerBackendTypeLowerName = "dockerbuildahtest"

func (i containerBackendType) String() string {
	if i >= containerBackendType(len(_containerBackendTypeIndex)-1) {
		return fmt.Sprintf("containerBackendType(%d)", i)
	}
	return _containerBackendTypeName[_containerBackendTypeIndex[i]:_containerBackendTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _containerBackendTypeNoOp() {
	var x [1]struct{}
	_ = x[containerBackendDocker-(0)]
	_ = x[containerBackendBuildah-(1)]
	_ = x[containerBackendTest-(2)]
}

var _containerBackendTypeValues = []containerBackendType{containerBackendDocker, containerBackendBuildah, containerBackendTest}

var _containerBackendTypeNameToValueMap = map[string]containerBackendType{
	_containerBackendTypeName[0:6]:        containerBackendDocker,
	_containerBackendTypeLowerName[0:6]:   containerBackendDocker,
	_containerBackendTypeName[6:13]:       containerBackendBuildah,
	_containerBackendTypeLowerName[6:13]:  containerBackendBuildah,
	_containerBackendTypeName[13:17]:      containerBackendTest,
	_containerBackendTypeLowerName[13:17]: containerBackendTest,
}

var _containerBackendTypeNames = []string{
	_containerBackendTypeName[0:6],
	_containerBackendTypeName[6:13],
	_containerBackendTypeName[13:17],
}

// containerBackendTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func containerBackendTypeString(s string) (containerBackendType, error) {
	if val, ok := _containerBackendTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _containerBackendTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to containerBackendType values", s)
}

// containerBackendTypeValues returns all values of the enum
func containerBackendTypeValues() []containerBackendType {
	return _containerBackendTypeValues
}

// containerBackendTypeStrings returns a slice of all String values of the enum
func containerBackendTypeStrings() []string {
	strs := make([]string, len(_containerBackendTypeNames))
	copy(strs, _containerBackendTypeNames)
	return strs
}

// IsAcontainerBackendType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i containerBackendType) IsAcontainerBackendType() bool {
	for _, v := range _containerBackendTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
